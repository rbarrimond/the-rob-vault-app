openapi: 3.1.0
info:
  title: Destiny Vault Assistant API
  version: 1.0.0
servers:
  - url: https://therobvault.azure.barrimond.net/api
security:
  - function_key: []
paths:
  /health:
    get:
      summary: Health check endpoint for Azure monitoring with diagnostics
      operationId: healthCheck
      responses:
        '200':
          description: Health and diagnostics returned
        '500':
          description: Health check error
  /auth:
    get:
      summary: OAuth callback (public)
      operationId: oauthCallback
      security: []
      responses:
        '200':
          description: Auth complete
  /assistant/init:
    post:
      summary: Initialize assistant session with access token
      operationId: initializeAssistantSession
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_token:
                  type: string
      responses:
        '200':
          description: Assistant initialized
        '400':
          description: Failed to initialize user
  /session:
    get:
      summary: Get current session info
      operationId: getSessionInfo
      responses:
        '200':
          description: Session info returned
        '500':
          description: Failed to get session data
  /session/token:
    get:
      summary: Get access token and membership ID
      operationId: getSessionToken
      responses:
        '200':
          description: Token returned
        '500':
          description: Failed to get session token
  /token/refresh:
    get:
      summary: Refresh the Bungie access token
      operationId: refreshBungieToken
      responses:
        '200':
          description: Access token refreshed
        '403':
          description: No refresh token found. Please re-authenticate.
        '500':
          description: Failed to refresh token
  /vault:
    get:
      summary: Get Destiny 2 vault inventory
      operationId: getVaultInventory
      parameters:
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            minimum: 1
          description: Maximum number of items to return (pagination)
        - in: query
          name: offset
          required: false
          schema:
            type: integer
            minimum: 0
          description: Number of items to skip before starting to return results (pagination)
      responses:
        '200':
          description: Vault inventory returned
        '500':
          description: Failed to get vault inventory
  /vault/decoded:
    get:
      summary: Decode Destiny 2 vault inventory
      operationId: decodeVaultInventory
      parameters:
        - in: query
          name: includePerks
          required: false
          schema:
            type: boolean
          description: If true, include perks for each item
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            minimum: 1
          description: Maximum number of items to return (pagination)
        - in: query
          name: offset
          required: false
          schema:
            type: integer
            minimum: 0
          description: Number of items to skip before starting to return results (pagination)
      responses:
        '200':
          description: Decoded vault inventory
        '500':
          description: Failed to decode vault
  /characters:
    get:
      summary: Get Destiny 2 character equipment
      operationId: getCharacterEquipment
      parameters:
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            minimum: 1
          description: Maximum number of items to return per character (pagination)
        - in: query
          name: offset
          required: false
          schema:
            type: integer
            minimum: 0
          description: Number of items to skip before starting to return results per character (pagination)
      responses:
        '200':
          description: Character equipment returned
        '500':
          description: Failed to get character equipment
  /characters/decoded:
    get:
      summary: Decode Destiny 2 character equipment
      operationId: decodeCharacterEquipment
      parameters:
        - in: query
          name: includePerks
          required: false
          schema:
            type: boolean
          description: If true, include perks for each item
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            minimum: 1
          description: Maximum number of items to return per character (pagination)
        - in: query
          name: offset
          required: false
          schema:
            type: integer
            minimum: 0
          description: Number of items to skip before starting to return results per character (pagination)
      responses:
        '200':
          description: Decoded character equipment
        '500':
          description: Failed to decode character equipment
  /manifest/item:
    get:
      summary: Look up Destiny 2 manifest item definition
      operationId: getManifestItemDefinition
      parameters:
        - in: query
          name: definition
          required: true
          schema:
            type: string
        - in: query
          name: hash
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Manifest item definition returned
        '400':
          description: Missing or invalid parameters
        '404':
          description: Item not found in manifest
  /dim/backup:
    post:
      summary: Save a DIM backup
      operationId: saveDimBackup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                membership_id:
                  type: string
                dim_backup:
                  type: string
      responses:
        '200':
          description: DIM backup saved
        '400':
          description: Missing membership_id or dim_backup
        '500':
          description: Failed to save DIM backup
  /dim/list:
    get:
      summary: List all DIM backups
      operationId: listDimBackups
      responses:
        '200':
          description: DIM backups listed
        '400':
          description: No stored membership ID found
        '500':
          description: Failed to list DIM backups
  /save:
    post:
      summary: Save an object or file to Azure Blob Storage
      operationId: saveObject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filename:
                  type: string
                  description: Name of the file to save
                  example: "myfile.txt"
                content_type:
                  type: string
                  description: MIME type of the file
                  example: "text/plain"
                content:
                  type: string
                  description: File content as a string or base64-encoded string
                  example: "SGVsbG8gd29ybGQh" # "Hello world!" base64
                encoding:
                  type: string
                  description: Encoding of the content (e.g., "base64" or "utf-8")
                  example: "base64"
      responses:
        '200':
          description: Object saved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Object saved successfully.
                  blob:
                    type: string
                    example: myfile.txt
                  url:
                    type: string
                    example: https://<storage-account>.blob.core.windows.net/vault-data/myfile.txt
        '400':
          description: Bad request (missing fields or invalid content)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing filename or content in MIME object.
        '500':
          description: Internal server error (failed to save object)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Failed to save object: <error message>"
components:
  securitySchemes:
    function_key:
      type: apiKey
      name: x-functions-key
      in: header
  schemas:
    VaultItem:
      type: object
      properties:
        id:
          type: string
        name:
          type: string